#!/bin/sh
set -euf

##
# This script removes numbered files.
#
# Syntax:
#
#     $ rm-numbered-files [dir]
#
# Example to do the current directory:
#
#     $ rm-numbered-files
#
# Example to do a specific directory:
#
#     $ rm-numbered-files /foo/goo
#
#
# ## Which files?
#
# This deletes files with names that end in a separator then number:
#
#   * foo.1, foo-1, foo_1, foo=1, foo~1, etc.
#
# The file name separator can be any of:
#
#   * period, dash, underscore, equal, tilde.
#
#
# ## Compatibility notes:
#
# We prefer to be more compatible rather than system-specific.
#
#   * To delete files, we prefer `-exec rm` vs. `-delete`.
#     The former is more compatible, the latter is faster.
#
#   * To regex match, we prefer patterns to be basic vs. extended.
#     The former is more compatible, the latter is more modern.
#
#   * We prefer POSIX code vs. shell-specific code.
#
#
# ## Tracking
#
#   * Command: rm-numbered-files
#   * Website: http://sixarm.com/rm-numbered-files
#   * Cloning: https://github.com/sixarm/rm-numbered-files
#   * Version: 4.1.1
#   * Created: 2013-12-09
#   * Updated: 2019-09-09
#   * License: GPL
#   * Contact: Joel Parker Henderson (joel@joelparkerhenderson.com)
#   * Tracker: 7f2b1f4ed3481e5912a9f4e5f5a92a34
##

find "${1:-.}" \
     -type f \
     -regex ".*[-\_\=\.\~][0123456789][0123456789]*" \
     -exec rm {} \;
